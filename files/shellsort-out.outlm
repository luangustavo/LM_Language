   1  shellSort(int values[10], int size) int[] {
          [0001, 0001] (0002,                   ID) {shellSort}
          [0001, 0010] (0011,                   OP) {(}
          [0001, 0011] (0004,                  INT) {int}
          [0001, 0015] (0002,                   ID) {values}
          [0001, 0021] (0013,                   OB) {[}
          [0001, 0022] (0017,               CTEINT) {10}
          [0001, 0024] (0014,                   CB) {]}
          [0001, 0025] (0016,                 SPTR) {,}
          [0001, 0027] (0004,                  INT) {int}
          [0001, 0031] (0002,                   ID) {size}
          [0001, 0035] (0012,                   CP) {)}
          [0001, 0037] (0004,                  INT) {int}
          [0001, 0040] (0013,                   OB) {[}
          [0001, 0041] (0014,                   CB) {]}
          [0001, 0043] (0009,                   OK) {{}
   2        int h;
          [0002, 0007] (0004,                  INT) {int}
          [0002, 0011] (0002,                   ID) {h}
          [0002, 0012] (0015,                  SCO) {;}
   3        h = 1;
          [0003, 0007] (0002,                   ID) {h}
          [0003, 0009] (0039,                  ATR) {=}
          [0003, 0011] (0017,               CTEINT) {1}
          [0003, 0012] (0015,                  SCO) {;}
   4        if(h < size) {
          [0004, 0007] (0022,                   IF) {if}
          [0004, 0009] (0011,                   OP) {(}
          [0004, 0010] (0002,                   ID) {h}
          [0004, 0012] (0037,                  ORC) {<}
          [0004, 0014] (0002,                   ID) {size}
          [0004, 0018] (0012,                   CP) {)}
          [0004, 0020] (0009,                   OK) {{}
   5             h = h * 3 + 1;
          [0005, 0012] (0002,                   ID) {h}
          [0005, 0014] (0039,                  ATR) {=}
          [0005, 0016] (0002,                   ID) {h}
          [0005, 0018] (0034,                  OPM) {*}
          [0005, 0020] (0017,               CTEINT) {3}
          [0005, 0022] (0033,                  OPA) {+}
          [0005, 0024] (0017,               CTEINT) {1}
          [0005, 0025] (0015,                  SCO) {;}
   6        };
          [0006, 0007] (0010,                   CK) {}}
          [0006, 0008] (0015,                  SCO) {;}
   7        h = h / 3;
          [0007, 0007] (0002,                   ID) {h}
          [0007, 0009] (0039,                  ATR) {=}
          [0007, 0011] (0002,                   ID) {h}
          [0007, 0013] (0034,                  OPM) {/}
          [0007, 0015] (0017,               CTEINT) {3}
          [0007, 0016] (0015,                  SCO) {;}
   8        int c;
          [0008, 0007] (0004,                  INT) {int}
          [0008, 0011] (0002,                   ID) {c}
          [0008, 0012] (0015,                  SCO) {;}
   9        int j;
          [0009, 0007] (0004,                  INT) {int}
          [0009, 0011] (0002,                   ID) {j}
          [0009, 0012] (0015,                  SCO) {;}
  10        if(h > 0) {
          [0010, 0007] (0022,                   IF) {if}
          [0010, 0009] (0011,                   OP) {(}
          [0010, 0010] (0002,                   ID) {h}
          [0010, 0012] (0037,                  ORC) {>}
          [0010, 0014] (0017,               CTEINT) {0}
          [0010, 0015] (0012,                   CP) {)}
          [0010, 0017] (0009,                   OK) {{}
  11             int i;
          [0011, 0012] (0004,                  INT) {int}
          [0011, 0016] (0002,                   ID) {i}
          [0011, 0017] (0015,                  SCO) {;}
  12             repeater(i = h; size; 1) {
          [0012, 0012] (0025,             REPEATER) {repeater}
          [0012, 0020] (0011,                   OP) {(}
          [0012, 0021] (0002,                   ID) {i}
          [0012, 0023] (0039,                  ATR) {=}
          [0012, 0025] (0002,                   ID) {h}
          [0012, 0026] (0015,                  SCO) {;}
          [0012, 0028] (0002,                   ID) {size}
          [0012, 0032] (0015,                  SCO) {;}
          [0012, 0034] (0017,               CTEINT) {1}
          [0012, 0035] (0012,                   CP) {)}
          [0012, 0037] (0009,                   OK) {{}
  13                  c = values[i];
          [0013, 0017] (0002,                   ID) {c}
          [0013, 0019] (0039,                  ATR) {=}
          [0013, 0021] (0002,                   ID) {values}
          [0013, 0027] (0013,                   OB) {[}
          [0013, 0028] (0002,                   ID) {i}
          [0013, 0029] (0014,                   CB) {]}
          [0013, 0030] (0015,                  SCO) {;}
  14                  j = i;
          [0014, 0017] (0002,                   ID) {j}
          [0014, 0019] (0039,                  ATR) {=}
          [0014, 0021] (0002,                   ID) {i}
          [0014, 0022] (0015,                  SCO) {;}
  15                  if(j >= h and values[j - h] > c) {
          [0015, 0017] (0022,                   IF) {if}
          [0015, 0019] (0011,                   OP) {(}
          [0015, 0020] (0002,                   ID) {j}
          [0015, 0022] (0037,                  ORC) {>=}
          [0015, 0025] (0002,                   ID) {h}
          [0015, 0027] (0030,                  AND) {and}
          [0015, 0031] (0002,                   ID) {values}
          [0015, 0037] (0013,                   OB) {[}
          [0015, 0038] (0002,                   ID) {j}
          [0015, 0040] (0033,                  OPA) {-}
          [0015, 0042] (0002,                   ID) {h}
          [0015, 0043] (0014,                   CB) {]}
          [0015, 0045] (0037,                  ORC) {>}
          [0015, 0047] (0002,                   ID) {c}
          [0015, 0048] (0012,                   CP) {)}
          [0015, 0050] (0009,                   OK) {{}
  16                        values[j] = values[j - h];
          [0016, 0023] (0002,                   ID) {values}
          [0016, 0029] (0013,                   OB) {[}
          [0016, 0030] (0002,                   ID) {j}
          [0016, 0031] (0014,                   CB) {]}
          [0016, 0033] (0039,                  ATR) {=}
          [0016, 0035] (0002,                   ID) {values}
          [0016, 0041] (0013,                   OB) {[}
          [0016, 0042] (0002,                   ID) {j}
          [0016, 0044] (0033,                  OPA) {-}
          [0016, 0046] (0002,                   ID) {h}
          [0016, 0047] (0014,                   CB) {]}
          [0016, 0048] (0015,                  SCO) {;}
  17                        j = j - h;
          [0017, 0023] (0002,                   ID) {j}
          [0017, 0025] (0039,                  ATR) {=}
          [0017, 0027] (0002,                   ID) {j}
          [0017, 0029] (0033,                  OPA) {-}
          [0017, 0031] (0002,                   ID) {h}
          [0017, 0032] (0015,                  SCO) {;}
  18                  };
          [0018, 0017] (0010,                   CK) {}}
          [0018, 0018] (0015,                  SCO) {;}
  19                  values[j] = c;
          [0019, 0017] (0002,                   ID) {values}
          [0019, 0023] (0013,                   OB) {[}
          [0019, 0024] (0002,                   ID) {j}
          [0019, 0025] (0014,                   CB) {]}
          [0019, 0027] (0039,                  ATR) {=}
          [0019, 0029] (0002,                   ID) {c}
          [0019, 0030] (0015,                  SCO) {;}
  20             };
          [0020, 0012] (0010,                   CK) {}}
          [0020, 0013] (0015,                  SCO) {;}
  21             h = h / 2;
          [0021, 0012] (0002,                   ID) {h}
          [0021, 0014] (0039,                  ATR) {=}
          [0021, 0016] (0002,                   ID) {h}
          [0021, 0018] (0034,                  OPM) {/}
          [0021, 0020] (0017,               CTEINT) {2}
          [0021, 0021] (0015,                  SCO) {;}
  22        };
          [0022, 0007] (0010,                   CK) {}}
          [0022, 0008] (0015,                  SCO) {;}
  23        return values;
          [0023, 0007] (0029,               RETURN) {return}
          [0023, 0014] (0002,                   ID) {values}
          [0023, 0020] (0015,                  SCO) {;}
  24  };
          [0024, 0001] (0010,                   CK) {}}
          [0024, 0002] (0015,                  SCO) {;}
  25  main() void {
          [0025, 0001] (0001,                 MAIN) {main}
          [0025, 0005] (0011,                   OP) {(}
          [0025, 0006] (0012,                   CP) {)}
          [0025, 0008] (0003,                 VOID) {void}
          [0025, 0013] (0009,                   OK) {{}
  26        int i;
          [0026, 0007] (0004,                  INT) {int}
          [0026, 0011] (0002,                   ID) {i}
          [0026, 0012] (0015,                  SCO) {;}
  27        int unsortedValues[10];
          [0027, 0007] (0004,                  INT) {int}
          [0027, 0011] (0002,                   ID) {unsortedValues}
          [0027, 0025] (0013,                   OB) {[}
          [0027, 0026] (0017,               CTEINT) {10}
          [0027, 0028] (0014,                   CB) {]}
          [0027, 0029] (0015,                  SCO) {;}
  28        repeater(i = 0; 9; 1) {
          [0028, 0007] (0025,             REPEATER) {repeater}
          [0028, 0015] (0011,                   OP) {(}
          [0028, 0016] (0002,                   ID) {i}
          [0028, 0018] (0039,                  ATR) {=}
          [0028, 0020] (0017,               CTEINT) {0}
          [0028, 0021] (0015,                  SCO) {;}
          [0028, 0023] (0017,               CTEINT) {9}
          [0028, 0024] (0015,                  SCO) {;}
          [0028, 0026] (0017,               CTEINT) {1}
          [0028, 0027] (0012,                   CP) {)}
          [0028, 0029] (0009,                   OK) {{}
  29             unsortedValues[i] = lastValueRead();
          [0029, 0012] (0002,                   ID) {unsortedValues}
          [0029, 0026] (0013,                   OB) {[}
          [0029, 0027] (0002,                   ID) {i}
          [0029, 0028] (0014,                   CB) {]}
          [0029, 0030] (0039,                  ATR) {=}
          [0029, 0032] (0002,                   ID) {lastValueRead}
          [0029, 0045] (0011,                   OP) {(}
          [0029, 0046] (0012,                   CP) {)}
          [0029, 0047] (0015,                  SCO) {;}
  30        };
          [0030, 0007] (0010,                   CK) {}}
          [0030, 0008] (0015,                  SCO) {;}
  31        repeater(i = 0; 9; 1) {
          [0031, 0007] (0025,             REPEATER) {repeater}
          [0031, 0015] (0011,                   OP) {(}
          [0031, 0016] (0002,                   ID) {i}
          [0031, 0018] (0039,                  ATR) {=}
          [0031, 0020] (0017,               CTEINT) {0}
          [0031, 0021] (0015,                  SCO) {;}
          [0031, 0023] (0017,               CTEINT) {9}
          [0031, 0024] (0015,                  SCO) {;}
          [0031, 0026] (0017,               CTEINT) {1}
          [0031, 0027] (0012,                   CP) {)}
          [0031, 0029] (0009,                   OK) {{}
  32             print(unsortedValues[i]);
          [0032, 0012] (0027,                PRINT) {print}
          [0032, 0017] (0011,                   OP) {(}
          [0032, 0018] (0002,                   ID) {unsortedValues}
          [0032, 0032] (0013,                   OB) {[}
          [0032, 0033] (0002,                   ID) {i}
          [0032, 0034] (0014,                   CB) {]}
          [0032, 0035] (0012,                   CP) {)}
          [0032, 0036] (0015,                  SCO) {;}
  33             print("\n");
          [0033, 0012] (0027,                PRINT) {print}
          [0033, 0017] (0011,                   OP) {(}
          [0033, 0018] (0021,            CTESTRING) {"\n"}
          [0033, 0022] (0012,                   CP) {)}
          [0033, 0023] (0015,                  SCO) {;}
  34        };
          [0034, 0007] (0010,                   CK) {}}
          [0034, 0008] (0015,                  SCO) {;}
  35        int sortedValues[10] = shellsort(unsortedValues, 10);
          [0035, 0007] (0004,                  INT) {int}
          [0035, 0011] (0002,                   ID) {sortedValues}
          [0035, 0023] (0013,                   OB) {[}
          [0035, 0024] (0017,               CTEINT) {10}
          [0035, 0026] (0014,                   CB) {]}
          [0035, 0028] (0039,                  ATR) {=}
          [0035, 0030] (0002,                   ID) {shellsort}
          [0035, 0039] (0011,                   OP) {(}
          [0035, 0040] (0002,                   ID) {unsortedValues}
          [0035, 0054] (0016,                 SPTR) {,}
          [0035, 0056] (0017,               CTEINT) {10}
          [0035, 0058] (0012,                   CP) {)}
          [0035, 0059] (0015,                  SCO) {;}
  36        repeater(i = 0; 9; 1) {
          [0036, 0007] (0025,             REPEATER) {repeater}
          [0036, 0015] (0011,                   OP) {(}
          [0036, 0016] (0002,                   ID) {i}
          [0036, 0018] (0039,                  ATR) {=}
          [0036, 0020] (0017,               CTEINT) {0}
          [0036, 0021] (0015,                  SCO) {;}
          [0036, 0023] (0017,               CTEINT) {9}
          [0036, 0024] (0015,                  SCO) {;}
          [0036, 0026] (0017,               CTEINT) {1}
          [0036, 0027] (0012,                   CP) {)}
          [0036, 0029] (0009,                   OK) {{}
  37             print(sortedValues[i]);
          [0037, 0012] (0027,                PRINT) {print}
          [0037, 0017] (0011,                   OP) {(}
          [0037, 0018] (0002,                   ID) {sortedValues}
          [0037, 0030] (0013,                   OB) {[}
          [0037, 0031] (0002,                   ID) {i}
          [0037, 0032] (0014,                   CB) {]}
          [0037, 0033] (0012,                   CP) {)}
          [0037, 0034] (0015,                  SCO) {;}
  38             print("\n");
          [0038, 0012] (0027,                PRINT) {print}
          [0038, 0017] (0011,                   OP) {(}
          [0038, 0018] (0021,            CTESTRING) {"\n"}
          [0038, 0022] (0012,                   CP) {)}
          [0038, 0023] (0015,                  SCO) {;}
  39        };
          [0039, 0007] (0010,                   CK) {}}
          [0039, 0008] (0015,                  SCO) {;}
  40  };
          [0040, 0001] (0010,                   CK) {}}
          [0040, 0002] (0015,                  SCO) {;}
